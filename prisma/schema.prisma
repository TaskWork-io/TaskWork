// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  tasks    Task[]
  goals    Goal[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String   @default("#0ea5e9")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@map("projects")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      TaskStatus @default(UPCOMING)
  priority    Priority   @default(LOW)
  progress    Int        @default(0)
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userId      String
  projectId   String?

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  project Project? @relation(fields: [projectId], references: [id], onDelete: SetNull)

  @@map("tasks")
}

model Goal {
  id          String   @id @default(cuid())
  title       String
  description String?
  target      Int      @default(100)
  current     Int      @default(0)
  type        GoalType @default(TASK)
  deadline    DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

enum TaskStatus {
  UPCOMING
  OVERDUE
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum GoalType {
  TASK
  PROJECT
  CUSTOM
}